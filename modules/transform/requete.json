{
    "table_intermediaire":[
        {
            "tfiness_clean": "CREATE TABLE tfiness_clean AS SELECT IIF(LENGTH(tf_with.finess) = 8, '0' || tf_with.finess, tf_with.finess) as finess,tf_with.categ_lib,tf_with.categ_code,tf_with.rs, IIF(LENGTH(tf_with.ej_finess) = 8, '0' || tf_with.ej_finess, tf_with.ej_finess) as ej_finess, tf_with.ej_rs,tf_with.statut_jur_lib,IIF(tf_with.adresse_num_voie IS NULL, '', SUBSTRING(CAST(tf_with.adresse_num_voie as TEXT), 1, LENGTH(CAST(tf_with.adresse_num_voie as TEXT)) - 2) || ' ') ||IIF(tf_with.adresse_comp_voie IS NULL, '', tf_with.adresse_comp_voie || ' ') || IIF(tf_with.adresse_type_voie IS NULL, '', tf_with.adresse_type_voie || ' ') ||IIF(tf_with.adresse_nom_voie IS NULL, '', tf_with.adresse_nom_voie || ' ') ||IIF(tf_with.adresse_lieuditbp IS NULL, '', tf_with.adresse_lieuditbp || ' ') ||IIF(tf_with.adresse_lib_routage IS NULL, '', tf_with.adresse_lib_routage) as adresse,IIF(LENGTH(tf_with.ej_finess) = 8, '0' || tf_with.ej_finess, tf_with.ej_finess) as ej_finess,CAST(adresse_code_postal AS INTEGER) as adresse_code_postal, tf_with.com_code FROM t-finess tf_with WHERE tf_with.categ_code IN (159,160,162,165,166,172,175,176,177,178,180,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,2,200,202,205,207,208,209,212,213,216,221,236,237,238,241,246,247,249,250,251,252,253,255,262,265,286,295,343,344,354,368,370,375,376,377,378,379,381,382,386,390,393,394,395,396,397,402,411,418,427,434,437,440,441,445,446,448,449,450,453,460,461,462,464,500,501,502,606,607,608,609,614,633)" ,
            "table_recla":"CREATE TABLE table_recla AS SELECT IIF(LENGTH(se.ndeg_finessrpps )= 8, '0'|| se.ndeg_finessrpps, se.ndeg_finessrpps) as finess,COUNT(*) as nb_recla FROM reclamations se WHERE se.ndeg_finessrpps  IS NOT NULL AND (se.Signalement = 'Non' or se.Signalement IS NULL) GROUP BY 1",

            "igas_ciblage":"CREATE TABLE igas AS SELECT IIF(LENGTH(se.ndeg_finessrpps )= 8, '0'|| se.ndeg_finessrpps, se.ndeg_finessrpps) as finess,  SUM(IIF(se.motifs_igas like '%Hôtellerie-locaux-restauration%',1,0)) as Hôtellerie-locaux-restauration, SUM(IIF(se.motifs_igas like '%Problème d?organisation ou de fonctionnement de létablissement ou du service%',1,0)) as Problème dorganisation ou de fonctionnement de létablissement ou du service, SUM(IIF(se.motifs_igas like '%Problème de qualité des soins médicaux%',1,0)) as Problème de qualité des soins médicaux, SUM(IIF(se.motifs_igas like '%Problème de qualité des soins paramédicaux%',1,0)) as Problème de qualité des soins paramédicaux, SUM(IIF(se.motifs_igas like '%Recherche d?établissement ou d?un professionnel%',1,0)) as Recherche d?établissement ou d?un professionnel, SUM(IIF(se.motifs_igas like '%Mise en cause attitude des professionnels%',1,0)) as Mise en cause attitude des professionnels, SUM(IIF(se.motifs_igas like '%Informations et droits des usagers%',1,0)) as Informations et droits des usagers, SUM(IIF(se.motifs_igas like '%Facturation et honoraires%',1,0)) as Facturation et honoraires, SUM(IIF(se.motifs_igas like '%Santé-environnementale%',1,0)) as Santé-environnementale, SUM(IIF(se.motifs_igas like '%Activités d?esthétique réglementées%',1,0)) as Activités d?esthétique réglementées, SUM(IIF(se.motifs_igas like '%A renseigner%',1,0)) as A renseigner, SUM(IIF(se.motifs_igas like '%COVID-19%',1,0)) as COVID-19 FROM reclamations se WHERE (se.Signalement = 'Non' or se.Signalement IS NULL) AND se.ndeg_finessrpps  IS NOT NULL GROUP BY 1",
            "igas_controle":"CREATE TABLE igas AS SELECT IIF(LENGTH(se.ndeg_finessrpps )= 8, '0'|| se.ndeg_finessrpps, se.ndeg_finessrpps) as finess,  SUM(IIF(se.motifs_igas like '%Hôtellerie-locaux-restauration%',1,0)) as Hôtellerie-locaux-restauration, SUM(IIF(se.motifs_igas like '%Problème d?organisation ou de fonctionnement de létablissement ou du service%',1,0)) as Problème dorganisation ou de fonctionnement de létablissement ou du service, SUM(IIF(se.motifs_igas like '%Problème de qualité des soins médicaux%',1,0)) as Problème de qualité des soins médicaux, SUM(IIF(se.motifs_igas like '%Problème de qualité des soins paramédicaux%',1,0)) as Problème de qualité des soins paramédicaux, SUM(IIF(se.motifs_igas like '%Recherche d?établissement ou d?un professionnel%',1,0)) as Recherche d?établissement ou d?un professionnel, SUM(IIF(se.motifs_igas like '%Mise en cause attitude des professionnels%',1,0)) as Mise en cause attitude des professionnels, SUM(IIF(se.motifs_igas like '%Informations et droits des usagers%',1,0)) as Informations et droits des usagers, SUM(IIF(se.motifs_igas like '%Facturation et honoraires%',1,0)) as Facturation et honoraires, SUM(IIF(se.motifs_igas like '%Santé-environnementale%',1,0)) as Santé-environnementale, SUM(IIF(se.motifs_igas like '%Activités d?esthétique réglementées%',1,0)) as Activités d?esthétique réglementées, SUM(IIF(se.motifs_igas like '%A renseigner%',1,0)) as A renseigner, SUM(IIF(se.motifs_igas like '%COVID-19%',1,0)) as COVID-19 FROM reclamations se WHERE (se.Signalement = 'Non' or se.Signalement IS NULL) AND se.ndeg_finessrpps  IS NOT NULL GROUP BY 1",
            
            
            "table_signalement" :"CREATE TABLE table_signalement AS SELECT declarant_organismendeg_finess, survenue_du_cas_en_collectivitendeg_finess,date_de_reception, reclamation, declarant_type_etablissement_si_esems, ceci_est_un_eigs, famille_principale, nature_principa",
            "sign_ciblage": "CREATE TABLE sign AS SELECT finess, COUNT(*) as nb_signa, SUM(IIF(famille_principale = 'Evénements/incidents dans un établissement ou organisme' AND ceci_est_un_eigs = 'Non',1,0)) as Nombre d'EI sur la période 36mois, SUM(IIF(ceci_est_un_eigs = 'Oui', 1, 0)) as NB_EIGS, SUM(IIF(famille_principale = 'Evénements indésirables/graves associés aux soins' AND ceci_est_un_eigs = 'Non',1,0)) AS NB_EIAS FROM (SELECT CASE WHEN substring(tb.declarant_organismendeg_finess,-9) == substring(CAST(tb.survenue_du_cas_en_collectivitendeg_finess as text),1,9) THEN substring(tb.declarant_organismendeg_finess,-9) WHEN tb.survenue_du_cas_en_collectivitendeg_finess IS NULL THEN substring(tb.declarant_organismendeg_finess,-9) ELSE substring(CAST(tb.survenue_du_cas_en_collectivitendeg_finess as text),1,9) END as finess, * FROM table_signalement tb WHERE tb.reclamation != 'Oui') as sub_table GROUP BY 1"  ,
            "sign_controle": "CREATE TABLE sign AS SELECT finess, COUNT(*) as nb_signa, SUM(IIF(famille_principale = 'Evénements/incidents dans un établissement ou organisme' AND ceci_est_un_eigs = 'Non',1,0)) as Nombre d'EI sur la période 36mois, SUM(IIF(ceci_est_un_eigs = 'Oui', 1, 0)) as NB_EIGS, SUM(IIF(famille_principale = 'Evénements indésirables/graves associés aux soins' AND ceci_est_un_eigs = 'Non',1,0)) AS NB_EIAS FROM (SELECT CASE WHEN substring(tb.declarant_organismendeg_finess,-9) == substring(CAST(tb.survenue_du_cas_en_collectivitendeg_finess as text),1,9) THEN substring(tb.declarant_organismendeg_finess,-9) WHEN tb.survenue_du_cas_en_collectivitendeg_finess IS NULL THEN substring(tb.declarant_organismendeg_finess,-9) ELSE substring(CAST(tb.survenue_du_cas_en_collectivitendeg_finess as text),1,9) END as finess, * FROM table_signalement tb WHERE tb.reclamation != 'Oui') as sub_table GROUP BY 1"  ,
            "recla_signalement":"CREATE TABLE recla_signalement AS  SELECT tfc.finess, s.nb_signa, tr.nb_recla, s.'Nombre d'EI sur la période 36mois', s.NB_EIGS, s.NB_EIAS, s.Somme EI + EIGS + EIAS sur la période, s.nb EI/EIG : Acte de prévention, s.nb EI/EIG : Autre prise en charge, s.nb EI/EIG : Chute, s.nb EI/EIG : Disparition inquiétante et fugues (Hors SDRE/SDJ/SDT), s.nb EI/EIG : Dispositif médical, s.nb EI/EIG : Fausse route, s.nb EI/EIG : Infection associée aux soins (IAS) hors ES, s.nb EI/EIG : Infection associée aux soins en EMS et ambulatoire (IAS hors ES), s.nb EI/EIG : Parcours/Coopération interprofessionnelle, s.nb EI/EIG : Prise en charge chirurgicale, s.nb EI/EIG : Prise en charge diagnostique, s.nb EI/EIG : Prise en charge en urgence, s.nb EI/EIG : Prise en charge médicamenteuse, s.nb EI/EIG : Prise en charge des cancers, s.nb EI/EIG : Prise en charge psychiatrique, s.nb EI/EIG : Suicide, s.nb EI/EIG : Tentative de suicide, i.Hôtellerie-locaux-restauration, i.Problème d?organisation ou de fonctionnement de l?établissement ou du service, i.Problème de qualité des soins médicaux, i.Problème de qualité des soins paramédicaux, i.Recherche d?établissement ou d?un professionnel, i.Mise en cause attitude des professionnels, i.Informations et droits des usagers, i.Facturation et honoraires, i.'Santé-environnementale', i.Activités d?esthétique réglementées, i.A renseigner, i.COVID-19 FROM tfiness_clean tfc LEFT JOIN table_recla tr on tr.finess = tfc.finess LEFT JOIN igas i on i.finess = tfc.finess LEFT JOIN sign s on s.finess = tfc.finess",
            
            "clean_occupation_N-1": "CREATE TABLE clean_occupation_N AS SELECT IIF(LENGTH(o3.finess) = 8, '0'|| o3.finess, o3.finess) as finess, o3.taux_occ_%(param_N_1)s,o3.nb_lits_autorises_installes,o3.nb_lits_occ_%(param_N_1)s,o3.taux_occ_trimestre3 FROM occupation_%(param_N_1)s o3 ",
            "clean_occupation_N-2": "CREATE TABLE clean_occupation_N AS SELECT IIF(LENGTH(o3.finess) = 8, '0'|| o3.finess, o3.finess) as finess, o3.taux_occ_%(param_N_2)s,o3.nb_lits_autorises_installes,o3.nb_lits_occ_%(param_N_2)s,o3.taux_occ_trimestre3 FROM occupation_%(param_N_2)s o3 ",
            "clean_occupation_N-3": "CREATE TABLE clean_occupation_N AS SELECT IIF(LENGTH(o3.finess) = 8, '0'|| o3.finess, o3.finess) as finess, o3.taux_occ_%(param_N_3)s,o3.nb_lits_autorises_installes,o3.nb_lits_occ_%(param_N_3)s,o3.taux_occ_trimestre3 FROM occupation_%(param_N_3)s o3 ",
            "clean_occupation_N-4": "CREATE TABLE clean_occupation_N AS SELECT IIF(LENGTH(o3.finess) = 8, '0'|| o3.finess, o3.finess) as finess, o3.taux_occ_%(param_N_4)s,o3.nb_lits_autorises_installes,o3.nb_lits_occ_%(param_N_4)s,o3.taux_occ_trimestre3 FROM occupation_%(param_N_4)s o3 ",
            
            
            "clean_capacite_totale_auto":"CREATE TABLE clean_capacite_totale_auto AS SELECT IIF(LENGTH(cta.etiquettes_de_lignes )= 8, '0'|| cta.etiquettes_de_lignes, cta.etiquettes_de_lignes) as finess, cta.somme_de_capacite_autorisee_totale_ FROM capacite_totale_auto cta ",
            "clean_hebergement":"CREATE TABLE clean_hebergement AS SELECT IIF(LENGTH(h.finesset )= 8, '0'|| h.finesset, h.finesset) as finess,h.prixhebpermcs FROM hebergement h ",
            "clean_tdb_n-3":"CREATE TABLE clean_tdb_n-3 AS SELECT IIF(LENGTH(tdb_%(param_N_3)s.finess_geographique) = 8, '0'|| tdb_%(param_N_3)s.finess_geographique, tdb_%(param_N_3)s.finess_geographique) as finess,* FROM export-tdbesms-%(param_N_3)s-region_agg tdb_%(param_N_3)s",
            "clean_tdb_n-2":"CREATE TABLE clean_tdb_n-2 AS SELECT IIF(LENGTH(tdb_ %(param_N_2)s.finess_geographique )= 8, '0'|| tdb_ %(param_N_2)s.finess_geographique, tdb_ %(param_N_2)s.finess_geographique) as finess,* FROM export-tdbesms- %(param_N_2)s-region-agg tdb_ %(param_N_2)s",
            "correspondance":"CREATE TABLE correspondance AS SELECT SUBSTRING(cecpp.finess_-_rs_et ,1,9) as finess,cecpp.cadre FROM choix_errd_ca_pa_ph cecpp LEFT JOIN doublons_errd_ca dou on SUBSTRING(dou.finess,1,9) = SUBSTRING(cecpp.finess_-_rs_et,1,9) AND cecpp.cadre != 'ERRD' WHERE dou.finess IS NULL",
            "grouped_errd_charges":"CREATE TABLE grouped_errd_charges AS SELECT SUBSTRING(ec.structure_-_finess_-_raison_sociale,1,9) as finess,SUM(ec.charges_dexploitation) as sum_charges_dexploitation FROM errd_charges ec GROUP BY 1",
            "grouped_errd_produitstarif":"CREATE TABLE grouped_errd_produitstarif AS SELECT SUBSTRING(ep.structure_-_finess_-_raison_sociale,1,9) as finess,SUM(ep.groupe_i__produits_de_la_tarification) as sum_groupe_i__produits_de_la_tarification FROM errd_produitstarif ep GROUP BY 1",
            "grouped_errd_produits70":"CREATE TABLE grouped_errd_produits70 AS SELECT  SUBSTRING(ep2.structure_-_finess_-_raison_sociale,1,9) as finess, SUM(ep2.unnamed_1) as sum_produits70 FROM errd_produits70 ep2 GROUP BY 1",
            "grouped_errd_produitsencaiss":"CREATE TABLE grouped_errd_produitsencaiss AS SELECT  SUBSTRING(ep3.structure_-_finess_-_raison_sociale,1,9) as finess, SUM(ep3.produits_dexploitation) as sum_produits_dexploitation FROM errd_produitsencaiss ep3 GROUP BY 1",
            "grouped_caph_charges":"CREATE TABLE grouped_caph_charges AS SELECT SUBSTRING(cch.structure_-_finess_-_raison_sociale,1,9) as finess,SUM(cch.charges_dexploitation) as sum_charges_dexploitation FROM caph_charges cch  GROUP BY 1",
            "grouped_caph_produitstarif":"CREATE TABLE grouped_caph_produitstarif AS SELECT SUBSTRING(cch2.structure_-_finess_-_raison_sociale,1,9) as finess,SUM(cch2.groupe_i__produits_de_la_tarification) as sum_groupe_i__produits_de_la_tarification FROM caph_produitstarif cch2 GROUP BY 1",
            "grouped_caph_produits70":"CREATE TABLE grouped_caph_produits70 AS SELECT SUBSTRING(cch3.structure_-_finess_-_raison_sociale,1,9) as finess, SUM(cch3.unnamed_1) as sum_produits70 FROM caph_produits70 cch3 GROUP BY 1",
            "grouped_caph_produitsencaiss":"CREATE TABLE grouped_caph_produitsencaiss AS SELECT  SUBSTRING(cch4.structure_-_finess_-_raison_sociale,1,9) as finess, SUM(cch4.produits_dexploitation) as sum_produits_dexploitation FROM caph_produitsencaiss cch4 GROUP BY 1",
            "grouped_capa_charges":"CREATE TABLE grouped_capa_charges AS SELECT  SUBSTRING(cc.structure_-_finess_-_raison_sociale,1,9) as finess, SUM(cc.charges_dexploitation) as sum_charges_dexploitation FROM capa_charges cc  GROUP BY 1",
            "grouped_capa_produitstarif":"CREATE TABLE grouped_capa_produitstarif AS SELECT  SUBSTRING(cpt.structure_-_finess_-_raison_sociale,1,9) as finess, SUM(cpt.produits_de_lexercice) as sum_groupe_i__produits_de_la_tarification FROM capa_produitstarif cpt  GROUP BY 1",
            "charges_produits":"CREATE TABLE charges_produits AS SELECT cor.finess, CASE  WHEN cor.cadre = 'ERRD' THEN gec.sum_charges_dexploitation WHEN cor.cadre = 'CA PA' THEN gc.sum_charges_dexploitation WHEN cor.cadre = 'CA PH' THEN gcch.sum_charges_dexploitation END as Total des charges, CASE  WHEN cor.cadre = 'ERRD' THEN gep.sum_groupe_i__produits_de_la_tarification WHEN cor.cadre = 'CA PA' THEN gcp.sum_groupe_i__produits_de_la_tarification WHEN cor.cadre = 'CA PH' THEN gcch2.sum_groupe_i__produits_de_la_tarification END as Produits de la tarification, CASE  WHEN cor.cadre = 'ERRD' THEN gep2.sum_produits70 WHEN cor.cadre = 'CA PA' THEN 0 WHEN cor.cadre = 'CA PH' THEN gcch3.sum_produits70 END as Produits du compte 70, CASE  WHEN cor.cadre = 'ERRD' THEN gep3.sum_produits_dexploitation WHEN cor.cadre = 'CA PA' THEN 0 WHEN cor.cadre = 'CA PH' THEN gcch4.sum_produits_dexploitation END as Total des produits (hors c/775, 777, 7781 et 78) FROM  correspondance cor LEFT JOIN grouped_errd_charges gec on gec.finess = cor.finess AND cor.cadre = 'ERRD'  LEFT JOIN grouped_errd_produitstarif gep on gep.finess = cor.finess AND cor.cadre = 'ERRD' LEFT JOIN grouped_errd_produits70 gep2 on gep2.finess = cor.finess AND cor.cadre = 'ERRD' LEFT JOIN grouped_errd_produitsencaiss gep3 on gep3.finess = cor.finess AND cor.cadre = 'ERRD' LEFT JOIN grouped_caph_charges gcch on gcch.finess = cor.finess AND cor.cadre = 'CA PH' LEFT JOIN grouped_caph_produitstarif gcch2 on gcch2.finess = cor.finess AND cor.cadre = 'CA PH' LEFT JOIN grouped_caph_produits70 gcch3 on gcch3.finess = cor.finess AND cor.cadre = 'CA PH' LEFT JOIN grouped_caph_produitsencaiss gcch4 on gcch4.finess = cor.finess AND cor.cadre = 'CA PH' LEFT JOIN grouped_capa_charges gc on gc.finess = cor.finess AND cor.cadre = 'CA PA' LEFT JOIN grouped_capa_produitstarif gcp on gcp.finess = cor.finess AND cor.cadre = 'CA PA'",
            "inspections":"CREATE TABLE inspections AS SELECT  IIF(LENGTH(code_finess)= 8, '0'|| code_finess, code_finess) as finess, count(distinct identifiant_de_la_mission) as ICE_N-1 (réalisé), SUM(IIF(type_de_mission = 'Inspection' OR type_de_mission = 'Inspection Technique' OR type_de_mission = 'Evaluation' OR type_de_mission = 'Contrôle' OR type_de_mission = 'Enquête administrative' OR type_de_mission = 'Visites de conformité' OR type_de_mission = 'Contrôle sur place / Visite de vérification', 1, 0)) as Inspection SUR SITE N-1 - Déjà réalisée, SUM(IIF(type_de_mission = 'Contrôle sur pièces' OR type_de_mission = 'Contrôle sur pièces EHPAD' OR type_de_mission = 'EHPAD Contrôle sur pièces' OR type_de_mission = 'Ctrl_sur_Pièces', 1, 0)) as Controle SUR PIECE N-1 - Déjà réalisé, SUM(IIF(type_de_planification = 'Programmé', 1, 0)) as Inspection/contrôle_Programmé_%(param_N)s FROM ESMS export-mission-4 GROUP BY code_finess",
            "communes":"CREATE TABLE communes AS SELECT c.com, c.dep, c.ncc   FROM commune c  WHERE c.reg IS NOT NULL UNION ALL SELECT c.com, c2.dep, c.ncc FROM commune c  LEFT JOIN commune c2 on c.comparent = c2.com AND c2.dep IS NOT NULL WHERE c.reg IS NULL and c.com != c.comparent"
            
        }
    ],
    "requete_finale":[
        {
            "requete_ciblage":"SELECT  r.ncc as 'Region', d.dep as 'Code dép', d.ncc AS 'Département', tf.categ_lib as 'Catégorie', tf.finess as 'FINESS géographique', tf.rs as 'Raison sociale ET', tf.ej_finess as 'FINESS juridique', tf.ej_rs as 'Raison sociale EJ', tf.statut_jur_lib as 'Statut juridique', tf.adresse as 'Adresse', IIF(LENGTH(tf.adresse_code_postal) = 4, '0'|| tf.adresse_code_postal, tf.adresse_code_postal) AS 'Code postal', c.NCC AS 'Commune', IIF(LENGTH(tf.com_code) = 4, '0'|| tf.com_code, tf.com_code) AS 'Code commune INSEE', CASE WHEN tf.categ_code = 500 THEN CAST(NULLTOZERO(ce.total_heberg_comp_inter_places_autorisees) as INTEGER) + CAST(NULLTOZERO(ce.total_accueil_de_jour_places_autorisees) as INTEGER) + CAST(NULLTOZERO(ce.total_accueil_de_nuit_places_autorisees) as INTEGER) ELSE CAST(ccta.somme_de_capacite_autorisee_totale_ as INTEGER) END as 'Capacité totale autorisée', CAST(ce.total_heberg_comp_inter_places_autorisees as INTEGER) as 'HP Total auto', CAST(ce.total_accueil_de_jour_places_autorisees as INTEGER) as 'AJ Total auto', CAST(ce.total_accueil_de_nuit_places_autorisees as INTEGER) as 'HT total auto', co3.nb_lits_occ_ %(param_N_1)s as 'Nombre de résidents au 31/12/ %(param_N_1)s', etra.nombre_total_de_chambres_installees_au_3112 as 'Nombre de places installées au 31/12/ %(param_N_1)s', ROUND(gp.gmp) as GMP, ROUND(gp.pmp) as PMP, ROUND((eira.taux_plus_10_medics_cip13*100), 2) as 'Part des résidents ayant plus de 10 médicaments consommés par mois', ROUND((eira.taux_atu*100), 2) as 'Taux de recours aux urgences sans hospitalisation des résidents d'EHPAD', ROUND((eira.taux_hospit_mco*100), 2) as 'Taux de recours à l'hospitalisation MCO des résidents d'EHPAD', ROUND((eira.taux_hospit_had*100), 2) as 'Taux de recours à l'HAD des résidents d'EHPAD', ROUND(chpr.'Total des charges') AS 'Total des charges', ROUND(chpr.'Produits de la tarification') AS 'Produits de la tarification',  ROUND(chpr.'Produits du compte 70') AS 'Produits du compte 70', ROUND(chpr.'Total des produits (hors c/775, 777, 7781 et 78)') AS 'Total des produits (hors c/775, 777, 7781 et 78)', '' as 'Saisie des indicateurs du TDB MS (campagne  %(param_N_1)s)', CAST(d2.taux_dabsenteisme_hors_formation_en_ as decmail) as 'Taux d'absentéisme  %(param_N-4)s', etra2.taux_dabsenteisme_hors_formation_en_ as 'Taux d'absentéisme  %(param_N-3)s', etra.taux_dabsenteisme_hors_formation_en_ as 'Taux d'absentéisme  %(param_N-2)s', ROUND(MOY3(d2.taux_dabsenteisme_hors_formation_en_ ,etra2.taux_dabsenteisme_hors_formation_en_ , etra.taux_dabsenteisme_hors_formation_en_) ,2) as 'Absentéisme moyen sur la période  %(param_N-4)s- %(param_N-2)s', CAST(d2.taux_de_rotation_des_personnels_en_ as decimal) as 'Taux de rotation du personnel titulaire  %(param_N-4)s', etra2.taux_de_rotation_des_personnels as 'Taux de rotation du personnel titulaire  %(param_N-3)s', etra.taux_de_rotation_des_personnels as 'Taux de rotation du personnel titulaire  %(param_N-2)s', ROUND(MOY3(d2.taux_de_rotation_des_personnels_en_ , etra2.taux_de_rotation_des_personnels , etra.taux_de_rotation_des_personnels), 2) as 'Rotation moyenne du personnel sur la période  %(param_N-4)s- %(param_N-2)s', CAST(d2.taux_detp_vacants_en_ as decimal) as 'ETP vacants  %(param_N-4)s', etra2.taux_detp_vacants as 'ETP vacants  %(param_N-3)s', etra.taux_detp_vacants as 'ETP vacants  %(param_N-2)s', etra.dont_taux_detp_vacants_concernant_la_fonction_soins as 'dont fonctions soins  %(param_N-2)s', etra.dont_taux_detp_vacants_concernant_la_fonction_socio_educative as 'dont fonctions socio-éducatives  %(param_N-2)s',  CAST(REPLACE(d3.taux_de_prestations_externes_sur_les_prestations_directes_en_,',','.')as decimal) as 'Taux de prestations externes sur les prestations directes  %(param_N-4)s', etra2.taux_de_prestations_externes_sur_les_prestations_directes as 'Taux de prestations externes sur les prestations directes  %(param_N-3)s',  etra.taux_de_prestations_externes_sur_les_prestations_directes as 'Taux de prestations externes sur les prestations directes  %(param_N-2)s', ROUND(MOY3(d3.taux_de_prestations_externes_sur_les_prestations_directes_en_ , etra2.taux_de_prestations_externes_sur_les_prestations_directes , etra.taux_de_prestations_externes_sur_les_prestations_directes) ,2) as 'Taux moyen de prestations externes sur les prestations directes', ROUND(CAST(REPLACE(d3.nombre_de_personnes_accompagnees_dans_leffectif_au_3112,',','.')as decimal)/CAST(REPLACE(d3.nombre_detp_reel_au_3112,',','.')as decimal), 2) as 'Nombre total d'ETP par usager en  %(param_N-4)s', ROUND((etra2.etp_directionencadrement + etra2.etp_administration_gestion + etra2.etp_services_generaux + etra2.etp_restauration + etra2.'etp_socio-educatif' + etra2.etp_paramedical + etra2.etp_psychologue + etra2.etp_ash + etra2.etp_medical + etra2.etp_personnel_education_nationale + etra2.etp_autres_fonctions)/etra2.nombre_de_personnes_accompagnees_dans_leffectif_au_3112, 2) as 'Nombre total d'ETP par usager en  %(param_N-3)s', ROUND((etra.etp_directionencadrement + etra.etp_administration_gestion + etra.etp_services_generaux + etra.etp_restauration + etra.etp_socio-educatif + etra.etp_paramedical + etra.etp_psychologue + etra.etp_ash + etra.etp_medical + etra.etp_personnel_education_nationale + etra.etp_autres_fonctions)/etra.nombre_de_personnes_accompagnees_dans_leffectif_au_3112, 2) as 'Nombre total d'ETP par usager en  %(param_N-2)s', MOY3(ROUND(CAST(REPLACE(d3.nombre_de_personnes_accompagnees_dans_leffectif_au_3112,',','.')as decimal)/CAST(REPLACE(d3.nombre_detp_reel_au_3112,',','.')as decimal), 2) , ROUND((etra2.etp_directionencadrement + etra2.etp_administration_gestion + etra2.etp_services_generaux + etra2.etp_restauration + etra2.etp_socio-educatif + etra2.etp_paramedical + etra2.etp_psychologue + etra2.etp_ash + etra2.etp_medical + etra2.etp_personnel_education_nationale + etra2.etp_autres_fonctions)/etra2.nombre_de_personnes_accompagnees_dans_leffectif_au_3112, 2) , ROUND((etra.etp_directionencadrement + etra.etp_administration_gestion + etra.etp_services_generaux + etra.etp_restauration + etra.etp_socio-educatif + etra.etp_paramedical + etra.etp_psychologue + etra.etp_ash + etra.etp_medical + etra.etp_personnel_education_nationale + etra.etp_autres_fonctions)/etra.nombre_de_personnes_accompagnees_dans_leffectif_au_3112, 2))AS 'Nombre moyen d'ETP par usager sur la période 2018- %(param_N-3)s', ROUND((etra.etp_paramedical + etra.etp_medical)/etra.nombre_de_personnes_accompagnees_dans_leffectif_au_3112, 2) as 'ETP 'soins' par usager en  %(param_N-2)s', ROUND(etra.'-_dont_nombre_detp_reels_de_medecin_coordonnateur', 2) as dont 'médecin coordonnateu'r, ROUND(etra.etp_directionencadrement + etra.etp_administration_gestion + etra.etp_services_generaux + etra.etp_restauration + etra.etp_socio-educatif + etra.etp_paramedical + etra.etp_psychologue + etra.etp_ash + etra.etp_medical + etra.etp_personnel_education_nationale + etra.etp_autres_fonctions, 2) as 'Total du nombre d'ETP', NULLTOZERO(rs.nb_recla) as 'Nombre de réclamations sur la période 2018- %(param_N_1)s', NULLTOZERO(ROUND(rs.nb_recla / ccta.somme_de_capacite_autorisee_totale_, 4)*100) as 'Rapport réclamations / capacité', NULLTOZERO(rs.'Hôtellerie-locaux-restauration') as 'Recla IGAS : Hôtellerie-locaux-restauration', NULLTOZERO(rs.'Problème d?organisation ou de fonctionnement de l?établissement ou du service') as 'Recla IGAS : Problème d’organisation ou de fonctionnement de l’établissement ou du service', NULLTOZERO(rs.'Problème de qualité des soins médicaux') as 'Recla IGAS : Problème de qualité des soins médicaux', NULLTOZERO(rs.'Problème de qualité des soins paramédicaux') as 'Recla IGAS : Problème de qualité des soins paramédicaux', NULLTOZERO(rs.'Recherche d?établissement ou d?un professionnel') as 'Recla IGAS : Recherche d’établissement ou d’un professionnel', NULLTOZERO(rs.'Mise en cause attitude des professionnels') as 'Recla IGAS : Mise en cause attitude des professionnels', NULLTOZERO(rs.'Informations et droits des usagers') as 'Recla IGAS : Informations et droits des usagers', NULLTOZERO(rs.'Facturation et honoraires') as 'Recla IGAS : Facturation et honoraires', NULLTOZERO(rs.'Santé-environnementale') as 'Recla IGAS : Santé-environnementale', NULLTOZERO(rs.'Activités d?esthétique réglementées') as 'Recla IGAS : Activités d’esthétique réglementées', NULLTOZERO(rs.NB_EIGS) as 'Nombre d'EIG sur la période  %(param_N-3)s- %(param_N)s', NULLTOZERO(rs.NB_EIAS) as 'Nombre d'EIAS sur la période  %(param_N-3)s- %(param_N)s', NULLTOZERO(rs.'Nombre d'EI sur la période 36mois') + NULLTOZERO(rs.NB_EIGS) + NULLTOZERO(rs.NB_EIAS) as 'Somme EI + EIGS + EIAS sur la période  %(param_N-3)s- %(param_N)s', NULLTOZERO(i.'ICE  %(param_N_1)s (réalisé)') as 'ICE  %(param_N_1)s (réalisé)', NULLTOZERO(i.'Inspection SUR SITE  %(param_N_1)s - Déjà réalisée') as 'Inspection SUR SITE  %(param_N_1)s - Déjà réalisée', NULLTOZERO(i.'Controle SUR PIECE  %(param_N_1)s - Déjà réalisé') as 'Controle SUR PIECE  %(param_N_1)s - Déjà réalisé', NULLTOZERO(i.'Inspection / contrôle Programmé  %(param_N)s') as 'Inspection / contrôle Programmé  %(param_N)s' FROM tfiness_clean tf  LEFT JOIN communes c on c.com = tf.com_code LEFT JOIN departement d on d.dep = c.dep LEFT JOIN region  r on d.reg = r.reg LEFT JOIN capacites_ehpad ce on ce.'et-ndegfiness' = tf.finess LEFT JOIN clean_capacite_totale_auto ccta on ccta.finess = tf.finess LEFT JOIN clean_occupation_N-4 o1  on o1.finess = tf.finess LEFT JOIN clean_occupation_N-3 o2  on o2.finess = tf.finess LEFT JOIN clean_occupation_N-2 o3  on o3.finess = tf.finess LEFT JOIN clean_occupation_N-1 co3  on co3.finess = tf.finess LEFT JOIN clean_tdb_n-2 etra on etra.finess = tf.finess LEFT JOIN clean_hebergement c_h on c_h.finess = tf.finess LEFT JOIN gmp_pmp gp on IIF(LENGTH(gp.finess_et) = 8, '0'|| gp.finess_et, gp.finess_et) = tf.finess LEFT JOIN charges_produits chpr on chpr.finess = tf.finess LEFT JOIN EHPAD_Indicateurs_ %(param_N-2)s_REG_agg eira on eira.et_finess = tf.finess LEFT JOIN diamant d2 on SUBSTRING(d2.finess,1,9) = tf.finess LEFT JOIN clean_tdb_n-3 etra2 on etra2.finess = tf.finess LEFT JOIN diamant2 d3 on SUBSTRING(d3.finess,1,9) = tf.finess LEFT JOIN recla_signalement rs on rs.finess = tf.finess LEFT JOIN inspections i on i.finess = tf.finess WHERE r.reg =  %(region)s ORDER BY tf.finess ASC"
        }
    ]
}